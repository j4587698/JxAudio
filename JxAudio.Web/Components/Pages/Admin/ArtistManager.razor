@page "/Admin/ArtistManager"
@using JxAudio.Core.Entity
@using JxAudio.Core.Extensions
@using FreeSql
@inject DialogService DialogService

<AdminTable TItem="ArtistEntity" OnQueryAsync="OnQueryAsync">
    <TableColumns>
        <TableColumn @bind-Field="@context.Name"></TableColumn>
        <TableColumn @bind-Field="@context.Count">
            <Template Context="value">
                <LinkButton OnClick="() => ShowTrack(value.Row)">@value.Value</LinkButton>
            </Template>
        </TableColumn>
    </TableColumns>
</AdminTable>

@code {

    private async Task<QueryData<ArtistEntity>> OnQueryAsync(QueryPageOptions option)
    {
        var select = ArtistEntity.Select.WhereDynamicFilter(option.ToDynamicFilter())
            .OrderByPropertyNameIf(option.SortOrder != SortOrder.Unset, option.SortName,
                option.SortOrder == SortOrder.Asc)
            .Count(out var count);
        if (option.IsPage)
        {
            select = select.Page(option.PageIndex, option.PageItems);
        }
        var items = await select.ToListAsync(x => new ArtistEntity()
        {
            
            Count = BaseEntity.Orm.Select<TrackArtistEntity>().Where(y => y.ArtistId == x.Id).Count(),
            Name = x.Name,
            Id = x.Id
        });
        return new QueryData<ArtistEntity>()
        {
            TotalCount = (int)count,
            Items = items,
            IsSorted = option.SortOrder != SortOrder.Unset,
            IsFiltered = option.Filters.Any(),
            IsAdvanceSearch = option.AdvanceSearches.Any(),
            IsSearch = option.Searches.Any() || option.CustomerSearches.Any()
        };
    }

    public async Task ShowTrack(ArtistEntity artistEntity)
    {
        await DialogService.Show(new DialogOption()
        {
            Component = BootstrapDynamicComponent.CreateComponent<ShowTrackComponent>(new Dictionary<string, object?>()
            {
                [nameof(ShowTrackComponent.Id)] = artistEntity.Id,
                [nameof(ShowTrackComponent.TypeName)] = "artist"
            })
        });
    }
}