@page "/Admin/FolderSelect"
@using JxAudio.Core.Entity
@inject DialogService DialogService
@inject MessageService MessageService

<AdminTable TItem="DirectoryEntity" ShowToolbar="true" ShowExtendButtons="true" OnSaveAsync="OnSaveAsync">
    <TableColumns>
        <TableColumn @bind-Field="@context.Provider" LookupServiceKey="plugin"></TableColumn>
        <TableColumn @bind-Field="@context.Name"></TableColumn>
        <TableColumn @bind-Field="@context.IsAccessControlled"></TableColumn>
        <TableColumn @bind-Field="@context.UserEntities">
            <Template Context="value">
                @if (value.Value != null)
                {
                    @string.Join(",", value.Value.Select(x => x.UserName))
                }
            </Template>
            <EditTemplate Context="value">
                <div class="col-12 col-sm-6 col-md-6">
                    <MultiSelect @bind-Value="@value.UserList" Items="_userList"></MultiSelect>
                </div>
            </EditTemplate>
        </TableColumn>
        <TableColumn @bind-Field="@context.Path">
            <EditTemplate Context="value">
                <div class="col-12">
                    <label class="form-label is-display">选择内容</label>
                    <SelectPathComponent ProviderId="value.Provider" @bind-Path="@value.Path"></SelectPathComponent>
                </div>
            </EditTemplate>
        </TableColumn>
    </TableColumns>
</AdminTable>

@code {
    private readonly List<SelectedItem> _userList = UserEntity.Select.ToList(x => new SelectedItem(x.Id.ToString(), x.UserName!));

    private async Task<bool> OnSaveAsync(DirectoryEntity arg1, ItemChangedType arg2)
    {
        await arg1.SaveAsync();
        await arg1.SaveManyAsync(nameof(DirectoryEntity.UserEntities));
        return true;
    }

}