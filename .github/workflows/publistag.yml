name: publish tag

on:
  push:
    branches:
      - master

jobs:
  create-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch all tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Read Field Value
        id: read-field
        run: |
          VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" JxAudio.Web/JxAudio.Web.csproj)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Get Latest Tag
        id: get-latest-tag
        run: |
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          LATEST_VERSION=$(echo "$LATEST_TAG" | sed 's/^v//')
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV

      - name: Compare and Create Tag
        run: |
          if [[ $(printf '%s\n' "$NEW_VERSION" "$LATEST_VERSION" | sort -V | head -n1) != "$NEW_VERSION" ]]; then
            git config --local user.email "jx@jvxiang.com"
            git config --local user.name "jx"
            git tag "v$NEW_VERSION"
            git push origin "v$NEW_VERSION"
          else
            echo "NEW_VERSION ($NEW_VERSION) is not greater than LATEST_VERSION ($LATEST_VERSION). No new tag created."
          fi
        env:
          NEW_VERSION: ${{ env.VERSION }}
          LATEST_VERSION: ${{ env.LATEST_VERSION }}
