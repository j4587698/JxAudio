@page "/Album"

@inject HttpClient Http

<PageTitle>专辑</PageTitle>

<div class="row g-3 form-inline" style="--bb-row-label-width: 80px">
    <div class="col-6">
        <BootstrapInput @bind-Value="_searchText" PlaceHolder="搜索" ShowLabel="true" DisplayText="搜索"></BootstrapInput>
    </div>
    <div class="col-6">
        <Select @bind-Value="_sortName" Items="@_sortItems" ShowLabel="true" DisplayText="排序方式"></Select>
    </div>
</div>
<div style="margin-top: 0.5rem">
<ListView TItem="AlbumID3" Items="_albums">
    <BodyTemplate>
        aaa
    </BodyTemplate>
    <FooterTemplate>
        <Pagination PageCount="100" ShowPageInfo="true" ShowGotoNavigator="true" OnPageLinkClick="OnPageLinkClick">
            <PageInfoTemplate>
                <div class="page-info me-2">@_pageInfo</div>
                <Select @bind-Value="_pageSize" Items="_selectedItems" ></Select>
            </PageInfoTemplate>
        </Pagination>
    </FooterTemplate>
</ListView>
</div>

@code {
    
    private int _pageSize = 10;
    private string _sortName = "newest";

    private string? _searchText;
    private readonly List<SelectedItem> _sortItems = [
        new SelectedItem("newest", "最新"), 
        new SelectedItem("random", "随机"),
        new SelectedItem("recent", "最多播放"),
        new SelectedItem("alphabeticalByName", "名称"),
        new SelectedItem("alphabeticalByArtist", "歌手"),
        new SelectedItem("starred", "星标")
    ];
    
    private List<AlbumID3> _albums = new List<AlbumID3>();
    private string _pageInfo = "每页0条 共0条";
    private readonly List<SelectedItem> _selectedItems = [new SelectedItem("10", "10 条/页"), new SelectedItem("20", "20 条/页"), new SelectedItem("50", "50 条/页"), new SelectedItem("100", "100 条/页")];

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await GetAlbums();
    }

    private async Task GetAlbums()
    {
        var res = await Http.PostAsJsonAsync("/api/Album", new QueryPageOptions()
        {
            SortName = _sortName,
            SearchText = _searchText,
            PageItems = _pageSize,
            PageIndex = 1
        });
        var queryData = await res.Content.ReadFromJsonAsync<QueryData<AlbumID3>>();
        if (queryData?.Items != null)
        {
            _pageInfo = $"每页{_pageSize}条 共{queryData.TotalCount}条";
            _albums = queryData.Items.ToList();
        }
        
    }

    private Task OnPageLinkClick(int page)
    {
        throw new NotImplementedException();
    }

}